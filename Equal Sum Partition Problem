DP: Equal Sum Partition Problem
class Solution {
    public boolean canPartition(int[] nums) {
        int sum  = 0;
        for(int i =0;i<nums.length;i++)
        sum = sum + nums[i];
        if(sum%2 > 0)
        return false;
        else 
        return isSubsetSum(nums.length, nums, sum/2);
    }
    static Boolean isSubsetSum(int N, int arr[], int sum){
        // code here
        boolean t[][] = new boolean[N+1][sum+1];
        for(int i=0;i<=N;i++) {
            for(int j=0;j<=sum;j++) {
                if(j==0)
                t[i][j]=true;
                if(j==0 && i==0)
                t[i][j]=true;
                if(j!=0 && i==0)
                t[i][j]=false;
            }
        }
        for(int i=1;i<=N;i++) {
             for(int j=1;j<=sum;j++) {
                if(arr[i-1]>j)
                t[i][j] = t[i-1][j];
                else
                t[i][j] = t[i-1][j] || t[i-1][j-arr[i-1]];
             }
        }
        return t[N][sum];
    }
}
