Palindromic Partitioning Recursive: 
class Solution{
    static int palindromicPartition(String str)
    {
        return MCM(str,0,str.length()-1,Integer.MAX_VALUE);
    }
    public static int MCM(String s, int i, int j, int min)
    {
        if(i>=j) {
            return 0;
        }
        if(isPalindrome(s,i,j))
        {
            return 0;
        }
        else {
            for(int k=i;k<j;k++) {
                int temp = MCM(s,i,k,min) + MCM(s,k+1,j,min) + 1;
                if(temp<min)
                min = temp;
            }
            return min;
        }
    }
    public static boolean isPalindrome(String s, int i, int j) {
        while(i <= j){
            if(s.charAt(i) != s.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }
}
