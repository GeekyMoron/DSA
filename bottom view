class Pair{
    Node node;
    int axis;
    Pair(Node node, int axis)
    {
        this.node = node;
        this.axis = axis;
    }
}
class Solution
{
    //Function to return a list containing the bottom view of the given tree.
    public ArrayList <Integer> bottomView(Node root)
    {
        ArrayList<Integer> ans = new ArrayList<Integer>();
        Map<Integer,Integer> map = new TreeMap<Integer,Integer>();
        if(root==null)
        return ans;
        Queue<Pair> q = new LinkedList<Pair>();
        q.add(new Pair(root,0));
        while(q.size()>0) {
            int size = q.size();
            for(int i=0;i<size;i++) {
                Pair p = q.poll();
                map.put(p.axis,p.node.data);
                if(p.node.left!=null)
                q.add(new Pair(p.node.left,p.axis-1));
                if(p.node.right!=null)
                q.add(new Pair(p.node.right,p.axis+1));
            }
        }
        map.forEach((k,v) -> {
                ans.add(v);
        });
        return ans;
    }
}
